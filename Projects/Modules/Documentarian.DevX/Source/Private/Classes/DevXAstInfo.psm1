# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

using namespace System.Management.Automation.Language

class DevXAstInfo {
  <#
    .SYNOPSIS
    Class synopsis
  #>

  #region Static properties
  #endregion Static properties

  #region Static methods
  #endregion Static methods

  #region Instance properties

  <#
    .Synopsis
    The abstract syntax tree (AST) of the script block.

    .Description
    This property contains the abstract syntax tree (AST) of the script block. The AST represents
    the structure of the script block, including the statements, expressions, and other elements
    that make up the script block. The AST is generated by the PowerShell parser when the script
    block is parsed.

  #>
  [ScriptBlockAst]
  $Ast

  <#
    .Synopsis
    The tokens found when parsing the script block.

    .Description
    This property contains the tokens found when parsing the script block. The tokens include the
    comments from the script block, which aren't available in the AST.
  #>
  [Token[]]
  $Tokens

  <#
    .Synopsis
    The parse errors found when parsing the script block.

    .Description
    This property contains the parse errors found when parsing the script block. This property is
    only populated if there are errors in the script block that prevent it from being parsed. The
    presence of these errors indicates that the script block is not valid PowerShell code and
    needs attention.
  #>
  [ParseError[]]
  $Errors

  #endregion Instance properties

  #region Instance methods
  #endregion Instance methods

  #region Constructors

  DevXAstInfo([ScriptBlock]$scriptBlock) {
    <#
      .SYNOPSIS
      Initializes a new instance of DevXAstInfo from a script block.

      .DESCRIPTION
      This constructor creates a new instance of DevXAstInfo from a script block. It parses the
      script block into an AST and stores the AST, tokens, and errors in the new instance.

      .PARAMETER scriptBlock
    #>
    $t, $e = $null
    $this.Ast = [Parser]::ParseInput(
      $scriptBlock.ToString(),
      [ref]$t,
      [ref]$e
    )
    $this.Tokens = $t
    $this.Errors = $e
  }

  DevXAstInfo([string]$path) {
    <#
      .SYNOPSIS
      Initializes a new instance of DevXAstInfo from a file path.

      .DESCRIPTION
      This constructor creates a new instance of DevXAstInfo from a file path. It parses the file
      into an AST and stores the AST, tokens, and errors in the new instance.

      .PARAMETER path
      The path to a PowerShell code file to parse into an AST.
    #>

    $t, $e = $null
    $this.Ast = [Parser]::ParseFile(
      $path,
      [ref]$t,
      [ref]$e
    )
    $this.Tokens = $t
    $this.Errors = $e
  }

  DevXAstInfo([ScriptBlockAst]$ast) {
    <#
      .SYNOPSIS
      Initializes a new instance of DevXAstInfo from a script block AST.

      .DESCRIPTION
      This constructor creates a new instance of DevXAstInfo from a script block AST. It stores the
      AST in the new instance. This contructor can't define the tokens or errors as it doesn't
      parse the code itself.

      .PARAMETER ast
      The script block AST to store in the new instance.
    #>

    $this.Ast = $ast
  }

  DevXAstInfo([ScriptBlockAst]$ast, [Token[]]$tokens, [ParseError[]]$errors) {
    <#
      .SYNOPSIS
      Initializes a new instance of DevXAstInfo from an AST, tokens, and errors.

      .DESCRIPTION
      This constructor creates a new instance of DevXAstInfo from an AST, tokens, and errors. It
      stores the AST, tokens, and errors in the new instance.

      .PARAMETER ast
      The script block AST to store in the new instance.

      .PARAMETER tokens
      The tokens to store in the new instance.

      .PARAMETER errors
      The parse errors to store in the new instance.
    #>

    $this.Ast    = $ast
    $this.Tokens = $tokens
    $this.Errors = $errors
  }

  #endregion Constructors
}
