# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

using module ../Classes/DevXAstInfo.psm1
using module ../Classes/DevXValidatePowerShellScriptPathAttribute.psm1

Function Get-Ast {
  <#
    .SYNOPSIS
    Gets the abstract syntax tree (AST) of a PowerShell script.

    .DESCRIPTION
    This function gets the abstract syntax tree (AST) of a PowerShell script. The AST represents
    the structure of the script, including the statements, expressions, and other elements that
    make up the script. The AST is generated by the PowerShell parser when the script is parsed.

    You can specify the script to parse by providing a file path, a script block, or a string
    containing the script text.

    .PARAMETER Path
    The file path to the script file to parse. The file must be a valid PowerShell code file that
    exists and is accessible. This parameter is mandatory if the **ScriptBlock** or **Text**
    parameters aren't specified.

    .PARAMETER ScriptBlock
    The script block to parse. This parameter is mandatory if the **Path** or **Text** parameters
    aren't specified.

    .PARAMETER Text
    The text of the script to parse. This parameter is mandatory if the **Path** or **ScriptBlock**
    parameters aren't specified.

    .OUTPUTs
    Returns an instance of the `DevXAstInfo` class that contains the AST, tokens, and errors found
    when parsing the script.
  #>

  [CmdletBinding()]
  [OutputType([DevXAstInfo])]
  param(
    [Parameter(Mandatory, ParameterSetName = 'ByPath')]
    [DevXValidatePowerShellScriptPathAttribute()]
    [string]
    $Path,

    [Parameter(Mandatory, ParameterSetName = 'ByScriptBlock')]
    [scriptblock]
    $ScriptBlock,

    [Parameter(Mandatory, ParameterSetName = 'ByInputText')]
    [ValidateNotNullOrEmpty()]
    [string]
    $Text
  )

  begin {

  }

  process {
    switch ($PSCmdlet.ParameterSetName) {
      'ByPath' {
        $Path = Resolve-Path -Path $Path -ErrorAction Stop
        [DevXAstInfo]::New($Path)
      }
      'ByScriptBlock' {
        [DevXAstInfo]::New($ScriptBlock)
      }
      'ByInputText' {
        [DevXAstInfo]::New([ScriptBlock]::Create($Text))
      }
    }
  }

  end {

  }
}
